<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC6550 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6550.xml">
<!ENTITY RFC6551 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6551.xml">
<!ENTITY RFC6345 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6345.xml">
<!ENTITY RFC6775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC5191 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5191.xml">
<!ENTITY RFC8138 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8138.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-roll-capabilities-latest" ipr="trust200902">
    <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
      <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="RPL Capabilties">RPL Capabilities</title>

    <author fullname="Rahul Arvind Jadhav" initials="R.A." role="editor" surname="Jadhav">
        <organization>Huawei Tech</organization>
        <address>
            <postal>
                <street>Kundalahalli Village, Whitefield,</street>
                <city>Bangalore</city>
                <region>Karnataka</region>
                <code>560037</code>
                <country>India</country>
            </postal>
            <phone>+91-080-49160700</phone>
            <email>rahul.ietf@gmail.com</email>
        </address>
    </author>
    <author initials="P" surname="Thubert" fullname="Pascal Thubert">
        <organization abbrev="Cisco">Cisco Systems, Inc</organization>
        <address>
            <postal>
                <street>Building D</street>
                <street>45 Allee des Ormes - BP1200 </street>
                <city>MOUGINS - Sophia Antipolis</city>
                <code>06254</code>
                <country>France</country>
            </postal>
            <phone>+33 497 23 26 34</phone>
            <email>pthubert@cisco.com</email>
        </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael Richardson">
        <organization>Sandelman Software Works</organization>
        <address>
            <email>mcr+ietf@sandelman.ca</email>
        </address>
    </author>
    <author fullname="Rabi Narayan Sahoo" initials="R.N." role="editor" surname="Sahoo">
        <address>
            <email>rabinarayans0828@gmail.com</email>
        </address>
    </author>

    <date/>

    <area>Routing</area>

    <workgroup>ROLL</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
     If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>RPL, mesh, MOP, MOPex, extension, capability, capabilities</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
        <t>
            This draft enables the discovery, advertisement and query of
            capabilities for RPL nodes.
        </t>
    </abstract>
</front>

<middle>
    <section title="Introduction">
        <t>
            RPL <xref target="RFC6550"/> specifies a proactive distance-vector
            based routing scheme. The protocol creates a DAG-like structure
            which operates with a given "Mode of Operation" (MOP) determining the
            minimal and mandatory set of primitives to be supported by all the
            participating nodes.
        </t>
        <t>
            This document adds a notion of capabilities using which the
            nodes in the network could inform its peers about its additional
            capabilities/features. This document highlights the differences of
            capabilities from that of Mode of operation and explains the
            necessity of it.
        </t>

        <section title="Requirements Language and Terminology">
            <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
                NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
                in this document are to be interpreted as described in <xref
                    target="RFC2119">RFC 2119</xref>.</t>

            <t>
                MOP: Mode of Operation. Identifies the mode of operation of the
                RPL Instance as administratively provisioned at and distributed
                by the DODAG root.
            </t>

            <t>
                MOPex: Extended MOP: As defined in [I-D.jadhav-roll-mopex].
                <!-- MOPex: Extended MOP: As defined in <xref
                    target="I-D.jadhav-roll-mopex"/>.
                -->
            </t>

            <t>
                Capabilities: Additional features or capabilities which might
                possibly be optional that are supported by the node.
            </t>

            <t>
                DAO: DODAG Advertisement Object. An RPL message used to
                advertise the target information in order to establish routing
                adjacencies.
            </t>

            <t>
                DIO: DODAG Information Object. An RPL message initiated by the
                root and is used to advertise the network configuration
                information.
            </t>

            <t>
                Current parent: Parent 6LR node before switching to the new
                path.
            </t>

            <t>
                NPDAO: No-Path DAO. A DAO message which has target with lifetime
                0.
            </t>

            <t>
                MOPex: MOP extension as defined in this document.
            </t>

            <t>
                Upstream path/direction: Path or direction from the node to the
                Root in a DAG.
            </t>

            <t>
                Downstream path/direction: Path or direction to the node from
                the Root in a DAG.
            </t>

            <t>
                This document uses terminology described in <xref
                    target="RFC6550"/>. For the sake of readability all the
                known relevant terms are repeated in this section.
            </t>
        </section>
        <section anchor="cap-what" title="What are Capabilities?">
            <t>
                Currently RPL specification does not have a mechanism whereby a
                node can signal the set of features that are available on its
                end.  Such a mechanism could help the root to advertise its
                capabilities and in response also determine some advanced
                information about the capabilities of the joining nodes.  This
                document defines Capabilities which could be supported by the
                nodes and handshaked as part of RPL signaling. Capabilities are
                embedded as RPL control message option as defined Section 6.7
                of <xref target = "RFC6550"/> in the base messages of DIO, DAO
                and DAO-ACK signaling.
            </t>
        </section>
    </section>

    <section anchor="requirements" title="Requirements for this document">
        <t>
            Following are the requirements considered for this documents:
            <list style="format REQ%d:">
                <t>
                    Backwards compatibility. The new options and new fields in
                    the DIO message should be backward compatible i.e. if there
                    are nodes which support old MOPs they could still operate
                    in their own instances.
                </t>
                <t>
                    Optional capabilities handshake. Capabilities are features,
                    possibly optional, which could be handshaked between the
                    nodes and the root within an RPL Instance.
                </t>
                <t>
                    Capabilities handshake could be optionally added with
                    existing MOPs. Capabilities been optional in nature could
                    be put to use with existing MOPs. Capabilities and
                    MOP-extension is mutually independent i.e. a DIO can have a
                    capabilities option, MOP-extension option or both in the
                    same message.
                </t>
                <t>
                    Capabilities could be explicitly queried.
                </t>
            </list>
        </t>
        <section anchor="cap-why" title="How are Capabilities different from MOP or DIO Configuration Option?">
            <t>
                The Mode of Operation (MOP) field in RPL mandates the
                operational requirement for the nodes joining as routers. MOP
                and DIO Configuration Option is strictly controlled by the Root
                node in RPL. Intermediate 6LRs could not modify the values.
                Also, the MOP never changes for the lifetime of the RPL
                Instance. Changes in DIO Configuration Option are possible but
                are very rare. Capabilities, on the other hand, might change
                more dynamically.
            </t>
            <t>
                RPL DIO message also carries routing metrics and constraints as
                specified in <xref target="RFC6551"/>. Metrics and constraints
                are used as part of objective function which aids in node's
                rank calculation. A router may use capabilities carried in DIO
                message as additional metrics/constraints. However,
                capabilities have a larger scope and may be carried in other
                messages other than DIO and can flow in both the directions
                (upstream and downstream).
            </t>
        </section>
    </section>

    <section anchor="cap-how" title="Capabilities">
    	<t>
            Handling of Capabilities MUST be supported if the network uses
            MOPex [I-D.jadhav-roll-mopex].
            <!-- Handling of Capabilities MUST be supported if the network uses
            MOPex <xref target="I-D.jadhav-roll-mopex"/>.
            -->
        </t>
		
        <t>
            Note that capabilities and MOPex are mutually exclusive and it is
            possible for an implementation to support either or both of the
            options.
        </t>
	<section title="Capability Catagories">
	    <t>
            Capabilities can be divided into two broad categories:
	    </t>
	    <t>
            Global Capabilities: It will include the features and capability
            supported across an RPL instance.  These capabilities can be advertised
            by the Root or 6LRs of the DODAG. If a Node in the LLN doesn't support
            a paticular global capability it may have to join the RPL instance as a
            leaf node, as indicated by that individual capability option.  Example
            of such capabilities are Compression Methods Supported, Support for TE
            paths (P-DAO).
	    </t>
	    <t>					
            Local Capabilities: It will include the cpabilities very specific
            to a Node in the LLN. Example of such capabilities are NBR Cache
            information, Routing Table Information.
	    </t>
	    <t>					
            Note that some capabilities can be either global or local depending
            upon the context they are used ex.P-DAO
            [TODO: This is not clear]
	    </t>			
	</section>
        <section anchor="cap-option" title="Capability Control Message Option">
            <t>
            <figure align="center" anchor="cap-opt" title="Capabilities
                Option"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Type = TODO | Option Length | Capabilities TLVs
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

               ]]></artwork> </figure>
            </t>
            <t>
                Multiple capabilities could be sent in the same message. The
                length field allows the message parser to skip the capability
                TLV parsing.
            </t>
            <t>
                <figure align="center" anchor="cap-tlv" title="Capabilities
                    TLV"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   CAPType     |J|I|G|C|.|.|.|.| CAPInfo(Opt)
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
               ]]></artwork> </figure>
            </t>
            <t>
                Every capability is identified by its type and it may have an
                optional Capability Info. Note that a given capability may or
                may not be diseminated with additional information depending on
                the scope of the capability indicated by the I bit.
            </t>
            <t>
                J = Join only as leaf if capability not understood
            </t>
            <t>
                I = Capability Info present
            </t>
            <t>
                C = Flag indicating that the capability MUST be copied in the
                downstream messages
            </t>
            <t>
                G = If set indicates a Global Capability else its a local.  For
                a capability if it's mandatory and global bit is set then node
                those either doesn't understand the capability or doesn't have
                this capability should not join the DODAG as a router.  All the
                global capablities MUST be diseminated across the network. 6LRs
                in the network MUST copy the global capabilities in their DIOs.
            </t>
            <t>
                <figure align="center" anchor="cap-info" title="Capabilities
                    Info"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   CAPLen      | Cap Info(format decided by individual cap spec)
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
               ]]></artwork> </figure>
            </t>
            <t>
                Capability Information provides additional information for the
                given capability. The format of this field should be defined as
                part the individual capability specification and is beyond the
                scope of this document. This document provides a container
                format for carrying the capability and its context information.
            </t>
        </section>
        <section anchor="cap-handshake" title="Capabilities Handshake">
            <t>
                The root node could advertise the set of capabilities it
                supports in the DIO message. A node could take advantage of the
                knowledge that the root supports a particular capability.
                Similarly a node could advertise its capabilities in the DAO
                message using the capability control message option defined in
                this document. Capabilities advertised by non-root nodes are
                strictly a subset of the capabilities advertised by the root.
            </t>
            <t>
                In storing MOP, the DAO message from the 6LR could contain
                multiple target options because of the DAO-Aggregation.  The
                targets of the capabilities option are indicated by one or more
                Target options that precede the Capabilties Option.  This
                handling is similar to the Transit Information Option as
                supported in Section 6.7.8. of <xref target = "RFC6550" />.
            </t>
        </section>
    </section>
    <section anchor="caps-guidelines" title="Guidelines for defining new capabilities">
        <t>
            This section provides guidelines/recommendations towards defining
            new capabilities. Note that the capabilities might be carried as
            part of the multicast messaging such as DIO and hence the set
            should be used in restrictive manner as far as possible.
        </t>
        <section anchor="caps-handling-flags" title="Handling Capability flags">
            <t>
                The 'G' (global) flag indicating global capability should be
                set only by the root. However, it is not mandatory for the root
                to set this flag for all capabilities it indicates. It should
                set this flag only for those capabilities which the 6LRs
                downstream must propagate further downstream.
            </t>
            <t>
                The 'I' (information) flag is set only when there is additional
                information to be set in context to the capability.
            </t>
            <t>
                The 'J' (join) flag can be set in context to a capability
                either by a 6LR or the root. The 'J' flag indicates that if the
                capability is not supported by a node then it can join the
                instance only as a 6LN (or do not join as 6LR).
            </t>
            <t>
                The 'C' (copy) flag is set by the node indicating that the
                capabilities MUST be copied downstream by the node.
            </t>
            <section anchor="flags-rules" title="Rules to handle capabilities flag">
                    <t hangText="How should node react to capability it does
                        not support before joining the Instance?"> <vspace />
                        On receiving a capability it does not support, the node
                        MUST check the 'J' flag of the capability before
                        joining the Instance. If the 'J' flag is set then it
                        can only join as a 6LN.
                    </t>
                    <t hangText="How should node react to capability it does
                        not support after joining the Instance?"> <vspace />
                        If the node is operating as 6LR and subsequently it
                        receives a capability which it doesn't understand with 'J'
                        flag set, then the node has to switch itself to 6LN mode.
                        During switching the node needs to inform its downstream
                        peers of its changed status by sending a DIO with infinite
                        rank as mentioned in <xref target="RFC6550"/>.
                    </t>
            </section>
        </section>
    </section>
    <section anchor="roll-caps" title="ROLL Capabilities">
        <section title="Projected Route Capability (PRC)">
            <t>
                <xref target="I-D.ietf-roll-dao-projection"/> proposes
                mechanisms to compute and install traffic engineered paths
                in the RPL network. It enables an RPL Root to install and
                maintain Projected Routes based on requested path metric,
                within its DODAG, along with a selected set of nodes that
                may or may not include self, for a chosen duration.
                Projected Route Capability will be used to enable this TE
                path calculation. PRC will be an optional global
                capability.  Any node that does not understand or support
                the projected route functions can still act as an LR.
            </t>
            <t>
                The DODAG root will use projected routes capability to
                advertise the support of projected routes with the possible
                mode of operations and set of path metrics it can use to
                calculate a projected route.  DODAG root will add the PRC
                to DIO message so that it can disseminate the information
                in entire DODAG.  Router nodes in the LLN receiving DIOs
                with PRC MUST forward the same into their sub-DODAG without
                any change even though they don't understand or support the
                projected route feature.LR will use the path metric
                information advertised by the DODAG root to learn these
                metrics from the network and neighbors.  The same
                information they will use to advertise in the sibling
                information option. LR will also use these path metrics
                information to request traffic-engineered routes optimizing
                a or set of specific network metric(s).
            </t>
            <t>					
                LRs in the network will use this capability to inform the
                PCE if they can be part of a storing or non-storing or both
                mode of projected routes. Here the PRC will be part of the
                DAO message.
            </t>
            <t>					
                The capability will convey the below information. The PRC
                MUST have either of the information or both depending upon
                the node type.If originator is BR, then both the
                information MUST be there.
                <list style="format %I:">
                    <t>
                        Supports projected route for both storing and
                        non-storing mode. 
                    </t>
                    <t>
                        List of supported path metrics that can be used to
                        compute projected routes.
                    </t>
                    <t>
                        [To Decide] Can we add the PCE address information
                        to this?
                    </t>
                </list>				
            </t>
            <section title="Format of Projected Route Capability">
                <t>
                    <figure align="center" anchor="prcap-tlv" title="Projected Route Capability TLV">
                        <artwork align="center"><![CDATA[
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type=0x01     |J|I|G|C|. . . .|     CAPLen    | MOP |  Resvd  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       Routing Metric 1        |      Routing Metric 1         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       Routing Metric n-1      |      Routing Metric n         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                            ]]></artwork> </figure>
                </t>
                <t>
                    Type: 0x01.
                </t>
                <t>
                    Flags: DODAG root MUST set G bit to 1 plus LRs MUST set
                    it to 0. I bit will always be set to 1.						
                </t>
                <t>
                    CAPLen: 8-bit unsigned integer, representing the length
                    in octets of the option, not including the Option Type
                    and Length fields.
                </t>
                <t>
                    MOP: 3-bit field indicating the mode of operation of
                    projected route capability.
                </t>
                <t>
                    Resvd: 5-bit unused fields.They MUST be initialized to
                    zero by the sender and MUST be ignored by the receiver.
                </t>
                <t>
                    Routing Metric: 16 bit unsigned integer represetning
                    the routing metric to be used for TE path calculation.
                    There can be n number of such routing metric fields.
                    These fileds are alowed with the PRC sent by the DODAG
                    ROOT. LRs MUST not send routing metric information
                    with PRC.
                </t>
                <t>
                    <figure align="center" anchor="rmetric" title="Routing Metric Information">
                        <artwork align="center"><![CDATA[
                            0                   1           
                            0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6
                            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                            | Type=0x01     |     Resvd     |
                            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                            ]]></artwork> </figure>
                </t>
            </section>
        </section>
        <section title="6LoRH Capability">
            <t> 
                <xref target="RFC8138"/> introduces a new 6LoWPAN Routing
                Header (6LoRH) to carry IPv6 routing information.  The
                6LoRH may contain source routing information such as a
                compressed form of SRH, and other sorts of routing
                information such as the RPI and IP-in-IP encapsulation
            </t>
            <t> 
                The transition to <xref target="RFC8138"/> in a network can
                only be done when all nodes support the specification.  In
                a mixed case with both RFC8138-capable and non-capable
                nodes it would not be posssible to take advantage of
                6LoRH.<xref target="I-D.thubert-roll-turnon-rfc8138"/>
                defines a mechanism to control the use of 6LoRH in a DODAG
                by using "T" flag bit in RPL configuration option. To
                assist DODAG root to decide if it has to set "T" flag bit
                in RPL Configuration Option to enable 6LoRH within its
                DODAG, all LRs in DODAG MUST inform their support of <xref
                    target="RFC8138"/> by adding 6LoRH capability TLV to
                their advertised capability control message option.
            </t>
            <t>
                DODAG root MUST use 6LoRH capability TLV to inform all the
                nodes in the DODAG, that DODAG is <xref target="RFC8138"/>
                compliance. 6LoRH is an optional local capability.
            </t>
            <t>
                Any LR joining the DODAG MUST add  6LoRH capability TLV to
                the capability control message option in its DAO message to
                inform BR that it supports RFC8138.If received DAO message
                doesn't have 6LoRH capability TLV, DODAG Root MUST conclude
                the target node doesn't support RFC 8138.So if DODAG is
                still not using 6LoRH, it MUST refrain from using the
                compression and if it is already using it, it MUST deny the
                LR from joining the DODAG with proper error code.

                [TODO- Need to add new Error code].
            </t>
            <t>
                6LoRH capability is an optional capability any node that
                doesn't understand or support the 6LoRH can join the DODAG
                if the "T" flag in the RPL Configuration option is not set
                otherwise it MUST join the network as a leaf node.
            </t>
            <section title="Format of 6LoRH Capability">
                <t>
                    <figure align="center" anchor="LoRH-tlv" title="6LoRH Capability TLV">
                        <artwork align="center"><![CDATA[
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type=0x02     |J|I|G|C|. . . .|           Reserved            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                            ]]></artwork> </figure>
                </t>
                <t>
                    Type: 0x02.
                </t>
                <t>
                    Flags: LRs MUST set it to 0. I bit will always be set to 0.						
                </t>
                <t>
                    Reserved: 16-bit unsigned integer, they MUST be
                    initialized to zero by the sender and MUST be ignored
                    by the receiver..
                </t>
            </section>
        </section>
        <section title="Routing Resource Capability">
            <t>
                Storing mode of operation requires each intermediate router
                in the LLN to maintain routing states' information in the
                routing table. LLN routers typically operate with
                constraints on processing power, memory, and energy
                (battery power). Memory limits the number of routing states
                an LR and BR can maintain.  When the routing table of an LR
                or BR is full, it will either reject the new DAO messages
                received or will use some replacement policy to remove a
                routing entry and add the new one. Rejection of DAO
                messages will lead to an increase in DAO message
                transmission that impacts the energy and network
                convergence time.  Routing state replacement leads to
                downward path downtime.
            </t>
            <t>
                One possible way to solve problems due to routing table
                size constraint is to use this information to add neighbors
                to the DAO parent set.Routing resource capability can be
                used by LR and BR to advertise their current routing table
                usage details in the network. LR or LNs in LLN can use this
                information in the selection of the DAO parent set. PCE can
                use this information to select intermediate routers for the
                projected routes. Routing Resource is an optional local
                capability.
            </t>
            <t>
                Routing reource capability TLV can occur multiple times in
                the capability control message option to advertise below
                possible routing table information.
                <list style="format %I:">
                    <t> Master Routing Table Storing </t>
                    <t> Storing mode P-DAO Table</t>
                    <t> Non-Storing mode P-DAO</t>
                </list>
            </t>
            <t>
                Routing resource capabablity sent in DIO message has link
                local scope and it MUST not be forwarded.
            </t>
            <section title="Format of Routing Resource Capability">
                <t>
                    <figure align="center" anchor="rtres-tlv" title="Routing Resource Capability TLV">
                        <artwork align="center"><![CDATA[
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Type=0x03     |J|I|G|C|. . . .|     CAPLen    | RT  |  Resvd  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Total Capacity         |  Used Per     |   Threshold   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                            ]]></artwork> </figure>
                </t>
                <t>
                    Type: 0x03.
                </t>
                <t>
                    Flags: G bit MUST be set to 0. I bit will always be set to 1.						
                </t>
                <t>
                    CAPLen: 8-bit unsigned integer, representing the length
                    in octets of the option, not including the Option Type
                    and Length fields.
                </t>
                <t>
                    RT: 3-bit field indicating the routing resource type.
                    This document defines 3 routing resource type.
                    <list style="format %I:">
                        <t> Master Routing Table Storing(RT = 1) </t>
                        <t> Storing mode P-DAO Table(RT = 2)</t>
                        <t> Non-Storing mode P-DAO(RT = 3)</t>
                    </list>
                </t>
                <t>
                    Resvd: 5-bit unused field. It MUST be initialized to
                    zero by the sender and MUST be ignored by the receiver.
                </t>
                <t>
                    Total Capacity: 16 bit unsigned integer representing
                    the the routing table size.						
                </t>
                <t>
                    Percentage used: 8 bit unsigned integer representing
                    the the percentage of routing table space currently in
                    use.						
                </t>
                <t>
                    Threshold: 8 bit unsigned integer representing the
                    maximum routing table space that can be used. If the
                    routing resource type is RT1 and used Percentage is
                    greater than or equal to a threshold, its siblings MUST
                    stop using it as the preferred parent or remove it from
                    the parent list. If the routing resource type is RT2 or
                    RT3 and used Percentage is greater than or equal to a
                    threshold, PCE MUST recompute some projected routes by
                    excluding this node.					
                </t>
            </section>
        </section>
        <section title="Neighbor Cache Capability">
            <t>
                A neighbor cache maintains neighboring one-hop connected
                nodes information such as MAC address, link-local IP
                address and other reachability state information needed for
                layer two communication.Node density has direct
                implications on the neighbor cache. In the constrained
                network scenario the size of the neighbor cache will be
                limited. Thus there are chances that a node may not be able
                to store all the neighboring nodes in its cache and use
                replacement algorithms to evict some of the entries to
                accommodate the new one.  If the replaced neighbor has
                installed a DAO route on it then it can lead to packet loss
                or additional address resolution message exchange.  To
                avoid unnecessary replacement of neighbor cache entries
                neighbor cache management policy <xref
                    target="I-D.ietf-lwig-nbr-mgmt-policy"/> proposes a
                solution that will put a restriction on the connectivity to
                immediate neighbor depending upon the type of neighbor.
                But this won't solve the problem unless until the
                availability of neighbor cache is not taken into
                consideration while selecting the DAO parent set.
            </t>
            <t>
                Neighbor Cache capability can be used by LR and BR to
                advertise their neighbor cache size information. This
                capablity information has only link scope and should not be
                advertised in the entire network.  [TODO-- As neighbor
                cache entries category is not yet standardized i think we
                can't use it in capability. With categories format of the
                TLV is going to chnage.]
            </t>
            <section title="Format of Neighbor Cache Capability">
            </section>
        </section>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
        <t>
            Thanks to Georgios Papadopoulos, Li Zhao for the review and
            feedback.
        </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
        <section title="New option: Capabilities">
            <t>
                New entry is required for supporting new Capabilities
                option in the "RPL Control Message Options" space <xref
                    target="RFC6550"/>.
            </t>
            <texttable title="New options">
                <ttcol align='center'>Value</ttcol>
                <ttcol align='center'>Meaning</ttcol>
                <ttcol align='center'>Reference</ttcol>

                <c>TBD1</c>
                <c>Capabilities</c>
                <c>This document</c>
            </texttable>
        </section>
        <section title="New Registry for Capabilities Flags">
            <t>
                IANA is requested to create a registry for the Capabilities
                flags as described in <xref target="cap-why"/> of this
                document. This registry should be located in TODO.  New
                Capabilities flags may be allocated only by an IETF review.
                Currently no flags are defined by this document. Each value is
                tracked with the following qualities:
                <list style="symbols">
                    <t>Flag</t>
                    <t>Description</t>
                    <t>Defining RFC</t>
                </list>
            </t>
        </section>
    </section>

    <section anchor="Security" title="Security Considerations">
        <t>
            The options defined in this document are carried in the base
            message objects as defined in <xref target = "RFC6550" />. The RPL
            control message options are protected by the same security
            mechanisms that protect the base messages.
        </t>
        <t>
            Capabilities flag can reveal that the node has been upgraded or is
            running a old feature set. This document assumes that the base
            messages that carry these options are protected by RPL security
            mechanisms and thus are not visible to a malicious node.
        </t>
        <t>
            [TODO] implications of malicious attack involving setting the
                capability flags.
        </t>
    </section>
</middle>

<back>
    <references title="Normative References">
        <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
        &RFC2119;
        &RFC6550;
        &RFC8138;
        <?rfc include='reference.I-D.ietf-roll-dao-projection'?>
        <?rfc include='reference.I-D.thubert-roll-turnon-rfc8138'?>
    </references>

    <references title="Informative References">
        <!-- Here we use entities that we defined at the beginning. -->
        &RFC6551;
        <?rfc include='reference.I-D.ietf-lwig-nbr-mgmt-policy'?>
        <!-- <?rfc include='reference.I-D.jadhav-roll-mopex'?>	<.- MOPex draft -->
    </references>

    <section anchor="app-additional" title="Capability Handshake Example">
        <t>
            <figure align="center" anchor="cap-handshake-example"
                title="Capabilities Option"><artwork align="center"><![CDATA[
                   Root          6LR          6LN
                    |             |            |
                    |   DIO(CS1)  |            |
                    |------------>|  DIO(CS1)  |
                    |             |----------->|
                    |             |            |
                    |             |   DAO(CS2) |
                    |             |<-----------|
                    |   DAO(CS2)  |            |
                    |<------------|            |
                    |             |            |
                    CS: Capabilities Set
                    CS1: Capabilities set advertised by root
                    CS2: Capabilities set advertised by node. CS2 is a subset of CS1.
                    ]]></artwork> </figure>
        </t>
    </section>

</back>
</rfc>
